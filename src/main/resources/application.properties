spring.datasource.url=jdbc:postgresql://localhost/sweater
spring.datasource.username=postgres
spring.datasource.password=gostkurt
# Spring возьмёт на себя создание структуры, т.е БД создаём мы, а структуру полностью обслуживает Spring
# Всё актуализировать будет Spring
spring.jpa.generate-ddl=false
# Показывает в логах sql, который генирирует hibernate. Нам он нужен для создания sql файла
spring.jpa.show-sql=false
# Это режим, в котором hibernate генирирует БД
# Это значит, что при старте приложения БД будет удалена и создана новая
spring.jpa.hibernate.ddl-auto=validate

spring.freemarker.expose-request-attributes=true

#Здесь мы будем хранить файлы, которые будут загружатся на сервер
upload.path=/D:/Programming/Java/sweater/upload

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

spring.mail.host=smtp.gmail.com
spring.mail.username=kurtlansfer@gmail.com
spring.mail.password=gostkurt0907991970
spring.mail.port=465
spring.mail.protocol=smtps
mail.debug=true

# Используйте этот секретный ключ для обмена данными между сайтом и сервисом reCAPTCHA
recaptcha.secret=6LeXL-QUAAAAADWlyIeWv7AS6EiJpXLdpUp1jnBA

# Необходимы для хранения сессий
spring.session.jdbc.initialize-schema=always
spring.session.jdbc.table-name=SPRING_SESSION